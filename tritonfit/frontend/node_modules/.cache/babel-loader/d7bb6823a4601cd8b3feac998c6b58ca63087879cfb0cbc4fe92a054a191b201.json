{"ast":null,"code":"var _jsxFileName = \"/Users/michaelhe/Desktop/CSCode/Classes/CSE 110/CSE 110 Project/TritonFit/tritonfit/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  loading: true,\n  login: () => {},\n  logout: () => {}\n});\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5001/auth/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n    }\n    setLoading(false);\n  };\n  const login = () => {\n    window.location.href = 'http://localhost:5001/auth/google';\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","user","loading","login","logout","useAuth","_s","AuthProvider","children","_s2","setUser","setLoading","checkAuth","token","localStorage","getItem","response","fetch","headers","ok","userData","json","removeItem","error","console","window","location","href","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelhe/Desktop/CSCode/Classes/CSE 110/CSE 110 Project/TritonFit/tritonfit/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface User {\n  _id: string;\n  googleId: string;\n  email: string;\n  name: string;\n  picture: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: () => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  login: () => {},\n  logout: () => {}\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuth();\n  }, []);\n\n  const checkAuth = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:5001/auth/user', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('token');\n    }\n    setLoading(false);\n  };\n\n  const login = () => {\n    window.location.href = 'http://localhost:5001/auth/google';\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB9E,MAAMC,WAAW,gBAAGN,aAAa,CAAkB;EACjDO,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAEA,CAAA,KAAM,CAAC,CAAC;EACfC,MAAM,EAAEA,CAAA,KAAM,CAAC;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMX,UAAU,CAACK,WAAW,CAAC;AAAA;AAACM,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACR,IAAI,EAAES,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACM,OAAO,EAAES,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtCX,OAAO,CAACU,QAAQ,CAAC;MACnB,CAAC,MAAM;QACLN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CT,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAClC;IACAX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMR,KAAK,GAAGA,CAAA,KAAM;IAClBsB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;EAC5D,CAAC;EAED,MAAMvB,MAAM,GAAGA,CAAA,KAAM;IACnBU,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCZ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAE5B,IAAI;MAAEC,OAAO;MAAEC,KAAK;MAAEC;IAAO,CAAE;IAAAI,QAAA,EAC3DA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,GAAA,CAjDWF,YAAqD;AAAA2B,EAAA,GAArD3B,YAAqD;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}