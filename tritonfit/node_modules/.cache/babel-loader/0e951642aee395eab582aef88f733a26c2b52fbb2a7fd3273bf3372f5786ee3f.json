{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlorm\\\\Desktop\\\\Projects\\\\TritonFit\\\\tritonfit\\\\src\\\\components\\\\SingleWorkout.tsx\",\n  _s = $RefreshSig$();\nimport styles from './components.module.css';\nimport rightArrow from \"../assets/rightArrow.svg\";\nimport { Difficulty } from \"../types/workout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SingleWorkout = ({\n  workout,\n  exercises\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  //Determine color of difficulty for CSS purposes\n  const getDifficultyClass = difficulty => {\n    switch (difficulty) {\n      case Difficulty.BEGINNER:\n        return '#0BBC47';\n      case Difficulty.INTERMEDIATE:\n        return '#FFAF7E';\n      case Difficulty.ADVANCED:\n        return '#CA3227';\n      default:\n        return \"\";\n    }\n  };\n  const handleOnClick = () => {\n    navigate(\"/exercises\", {\n      state: {\n        exercises,\n        workout\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.workoutItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.workoutLeftSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '16px',\n          fontWeight: '600'\n        },\n        children: workout.workoutName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: '#686868'\n        },\n        children: [workout.workoutDuration, \" min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.workoutRightSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '14px',\n          color: getDifficultyClass(workout.workoutDifficulty)\n        },\n        children: workout.workoutDifficulty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            border: 'none',\n            paddingTop: '15px'\n          },\n          onClick: handleOnClick,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: rightArrow,\n            alt: \"rightArrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SingleWorkout, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SingleWorkout;\nvar _c;\n$RefreshReg$(_c, \"SingleWorkout\");","map":{"version":3,"names":["styles","rightArrow","Difficulty","useNavigate","jsxDEV","_jsxDEV","SingleWorkout","workout","exercises","_s","navigate","getDifficultyClass","difficulty","BEGINNER","INTERMEDIATE","ADVANCED","handleOnClick","state","className","workoutItem","children","workoutLeftSection","style","fontSize","fontWeight","workoutName","fileName","_jsxFileName","lineNumber","columnNumber","color","workoutDuration","workoutRightSection","workoutDifficulty","border","paddingTop","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/nlorm/Desktop/Projects/TritonFit/tritonfit/src/components/SingleWorkout.tsx"],"sourcesContent":["import styles from './components.module.css';\r\nimport rightArrow from \"../assets/rightArrow.svg\"\r\nimport { Workout, Difficulty } from \"../types/workout\";\r\nimport { Exercise } from '../types/exercise';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface SingleWorkoutProps {\r\n    workout: Workout,\r\n    exercises: Exercise[],\r\n}\r\n\r\nexport const SingleWorkout = ({ workout, exercises}: SingleWorkoutProps) => {\r\n    const navigate = useNavigate();\r\n    \r\n    //Determine color of difficulty for CSS purposes\r\n    const getDifficultyClass = (difficulty: Difficulty) => {\r\n        switch (difficulty) {\r\n            case Difficulty.BEGINNER:\r\n                return '#0BBC47';\r\n            case Difficulty.INTERMEDIATE:\r\n                return '#FFAF7E';\r\n            case Difficulty.ADVANCED:\r\n                return '#CA3227';\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        navigate(\"/exercises\", { state: { exercises, workout } });\r\n    };\r\n\r\n    return (\r\n        <ul className={styles.workoutItem}>\r\n            <div className={styles.workoutLeftSection}>\r\n                <div style={{fontSize:'16px', fontWeight:'600'}}>{workout.workoutName}</div> \r\n                <div style={{fontSize:'14px', color:'#686868'}}>{workout.workoutDuration} min</div>\r\n            </div>\r\n            <div className={styles.workoutRightSection}>\r\n                <div style={{fontSize:'14px', color: getDifficultyClass(workout.workoutDifficulty) }}>{workout.workoutDifficulty}</div> \r\n                <div>\r\n                    <button style={{border:'none', paddingTop: '15px'}} onClick={handleOnClick}><img src={rightArrow} alt=\"rightArrow\" /></button>\r\n                </div>\r\n            </div>\r\n        </ul>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}