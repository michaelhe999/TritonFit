{"ast":null,"code":"var _jsxFileName = \"/Users/emmaz/Documents/GitHub/TritonFit/tritonfit/src/views/RecommendedWorkouts.tsx\",\n  _s = $RefreshSig$();\nimport { generateWorkout } from \"../utils/workoutGenerator-utils\";\nimport { useEffect, useState } from 'react';\nimport styles from './RecommendedWorkouts.module.css';\nimport miniLogo from '../assets/miniLogo.svg';\nimport { SingleWorkout } from \"../components/SingleWorkout\";\nimport blackLeftArrow from '../assets/blackLeftArrow.svg';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleResponse = {\n  gender: 'male',\n  goal: 'muscle gain',\n  targetArea: 'chest',\n  level: 'intermediate',\n  duration: '60'\n};\nasync function getWorkouts() {\n  const response = await generateWorkout(sampleResponse);\n  return response;\n}\nexport const RecommendedWorkouts = () => {\n  _s();\n  const [workouts, setWorkouts] = useState();\n  useEffect(() => {\n    getWorkouts().then(response => {\n      setWorkouts(response);\n    });\n  }, []);\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: workouts ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.backButton,\n          onClick: handleBack,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: blackLeftArrow,\n            alt: \"back arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.logo,\n          src: miniLogo,\n          alt: \"miniLogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.header,\n        children: \"Recommended Workouts For You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), workouts.workouts.map(workout => {\n        return /*#__PURE__*/_jsxDEV(SingleWorkout, {\n          workout: workout,\n          exercises: workout.exercises\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this) : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RecommendedWorkouts, \"Cd+A3Vc2Sko8Df9Ug0DStGp7pic=\", false, function () {\n  return [useNavigate];\n});\n_c = RecommendedWorkouts;\nvar _c;\n$RefreshReg$(_c, \"RecommendedWorkouts\");","map":{"version":3,"names":["generateWorkout","useEffect","useState","styles","miniLogo","SingleWorkout","blackLeftArrow","useNavigate","jsxDEV","_jsxDEV","sampleResponse","gender","goal","targetArea","level","duration","getWorkouts","response","RecommendedWorkouts","_s","workouts","setWorkouts","then","navigate","handleBack","children","style","display","className","backButton","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","logo","header","map","workout","exercises","_c","$RefreshReg$"],"sources":["/Users/emmaz/Documents/GitHub/TritonFit/tritonfit/src/views/RecommendedWorkouts.tsx"],"sourcesContent":["import { generateWorkout } from \"../utils/workoutGenerator-utils\"\nimport { useEffect, useState } from 'react';\nimport { WorkoutFormResponses, WorkoutList } from \"../types/workout\";\nimport styles from './RecommendedWorkouts.module.css'\nimport miniLogo from '../assets/miniLogo.svg'\nimport { SingleWorkout } from \"../components/SingleWorkout\";\nimport blackLeftArrow from '../assets/blackLeftArrow.svg'\nimport { useNavigate } from \"react-router-dom\";\n\nconst sampleResponse: WorkoutFormResponses = {\n    gender: 'male',\n    goal: 'muscle gain',\n    targetArea: 'chest',\n    level: 'intermediate',\n    duration: '60'\n}\n\nasync function getWorkouts() {\n    const response = await generateWorkout(sampleResponse);\n    return response;\n}\n\nexport const RecommendedWorkouts = () => {\n    const [workouts, setWorkouts] = useState<WorkoutList>();\n\n    useEffect(() => {\n        getWorkouts().then(response => {\n            setWorkouts(response);\n        });\n\n    }, []);\n\n    const navigate = useNavigate();\n\n    const handleBack = () => {\n        navigate(-1);\n    };\n\n    return (\n        <div>\n            {workouts ? \n                <div>\n                    <div style={{ display: 'inline-block' }}>\n                        <button className = {styles.backButton} onClick={handleBack}>\n                            <img \n                                src={blackLeftArrow} \n                                alt=\"back arrow\" \n                            />\n                        </button>\n                        <img className = {styles.logo} src = {miniLogo} alt=\"miniLogo\"></img>\n                        \n                    </div>\n                    \n                    <h1 className = {styles.header} >Recommended Workouts For You</h1>\n                    {workouts.workouts.map((workout) => {\n                        return <SingleWorkout workout={workout} exercises={workout.exercises}/>\n                    })}\n                </div>\n\n            : 'Loading...'}\n            \n            \n        </div>\n    );\n\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}