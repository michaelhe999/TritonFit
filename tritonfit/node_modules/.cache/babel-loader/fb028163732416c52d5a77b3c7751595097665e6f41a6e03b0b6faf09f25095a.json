{"ast":null,"code":"var _jsxFileName = \"/Users/michaelchu/TritonFit/tritonfit/src/components/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from './components.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = ({\n  items,\n  onResults,\n  searchKey,\n  resetCondition\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const handleSearchChange = event => {\n    const value = event.target.value;\n    setSearchTerm(value);\n\n    // Filter the items based on the search term\n    const filteredResults = items.filter(item => {\n      var _item$searchKey;\n      return (_item$searchKey = item[searchKey]) === null || _item$searchKey === void 0 ? void 0 : _item$searchKey.toString().toLowerCase().includes(value.toLowerCase());\n    });\n\n    // Send filtered results back to the parent component\n    onResults(filteredResults);\n  };\n  useEffect(() => {\n    if (resetCondition) {\n      setSearchTerm(\"\");\n    }\n  }, [resetCondition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.search,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.searchBar,\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"Tngw7yRuBicxNU1h+Qu7anZ1xPc=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","SearchBar","items","onResults","searchKey","resetCondition","_s","searchTerm","setSearchTerm","handleSearchChange","event","value","target","filteredResults","filter","item","_item$searchKey","toString","toLowerCase","includes","className","search","children","fileName","_jsxFileName","lineNumber","columnNumber","searchBar","type","onChange","_c","$RefreshReg$"],"sources":["/Users/michaelchu/TritonFit/tritonfit/src/components/SearchBar.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from './components.module.css'\n\ninterface SearchBarProps<T> {\n    // List of items to search through (Generic)\n    items: T[]; \n    // Callback to pass filtered results back\n    onResults: (results: T[]) => void; \n    // key for objects; searching by this property\n    searchKey: keyof T; \n    //optional: lets search bar reset \n    resetCondition?: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const SearchBar = <T,>({\n    items,\n    onResults,\n    searchKey,\n    resetCondition,\n}: SearchBarProps<T>) => {\n    const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n    const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n        setSearchTerm(value);\n\n        // Filter the items based on the search term\n        const filteredResults = items.filter((item) => {\n            return item[searchKey]?.toString().toLowerCase().includes(value.toLowerCase());\n        });\n\n        // Send filtered results back to the parent component\n        onResults(filteredResults);\n    };\n\n    useEffect(() => {\n        if (resetCondition) {\n          setSearchTerm(\"\");\n        }\n    }, [resetCondition]); \n\n    return (\n        <div className ={styles.search}>\n            <label> Search</label>\n            <input\n                className= {styles.searchBar}\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n            />\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAa5C,OAAO,MAAMC,SAAS,GAAGA,CAAK;EAC1BC,KAAK;EACLC,SAAS;EACTC,SAAS;EACTC;AACe,CAAC,KAAK;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMa,kBAAkB,GAAIC,KAA0C,IAAK;IACvE,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChCH,aAAa,CAACG,KAAK,CAAC;;IAEpB;IACA,MAAME,eAAe,GAAGX,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAK;MAAA,IAAAC,eAAA;MAC3C,QAAAA,eAAA,GAAOD,IAAI,CAACX,SAAS,CAAC,cAAAY,eAAA,uBAAfA,eAAA,CAAiBC,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,KAAK,CAACO,WAAW,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC;;IAEF;IACAf,SAAS,CAACU,eAAe,CAAC;EAC9B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZ,IAAIQ,cAAc,EAAE;MAClBG,aAAa,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpB,oBACIL,OAAA;IAAKoB,SAAS,EAAGtB,MAAM,CAACuB,MAAO;IAAAC,QAAA,gBAC3BtB,OAAA;MAAAsB,QAAA,EAAO;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtB1B,OAAA;MACIoB,SAAS,EAAGtB,MAAM,CAAC6B,SAAU;MAC7BC,IAAI,EAAC,MAAM;MACXjB,KAAK,EAAEJ,UAAW;MAClBsB,QAAQ,EAAEpB;IAAmB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACpB,EAAA,CAtCWL,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}